;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2/18/2019
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <i2c.h>
;#include <alcd.h>           // Alphanumeric LCD functions
;#include <stdio.h>
;#include <delay.h>
;
;#define F_CPU               8000000
;#define AM2315_ADDR         0x5C
;unsigned char Receive[20]={0};
;unsigned char *pointer_recv=&Receive[0];
;/*----------------Global variable definition------------*/
;//unsigned int    T_delay=0;                 //Tang 1 moi khi ngat timer0 (100us)
;/*----------------Global function declaration-----------*/
;void GPIO_Init();                   // GPIO initialization
;//void Timer0_Init();                 // Timer0 initialization
;//void Delay_100us(unsigned int Time);// Delay 100us timer0
;char Convert_2Char(unsigned char numb_in);
;int Read_AM2315(void);
;/*-----------------------Main---------------------------*/
;void main(void)
; 0000 002C {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002D     GPIO_Init();            // GPIO initialization
;PCODE: $0000000E VOL: 0
; 0000 002E //    Timer0_Init();          // Timer0 initialization
; 0000 002F     i2c_init();
;PCODE: $0000000F VOL: 0
; 0000 0030 //    twi_master_init(50);    // TWI initialization
; 0000 0031     lcd_init(16);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0032     PORTC|=0x01;    //Off LED
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0033     #asm("sei")
;PCODE: $00000014 VOL: 0
	sei
;PCODE: $00000015 VOL: 0
; 0000 0034     while (1)
;PCODE: $00000016 VOL: 0
; 0000 0035     {
; 0000 0036         lcd_gotoxy(0,1);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0037         lcd_puts("AM2315");
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0038 //        if(Read_AM2315()==1)
; 0000 0039 //        {
; 0000 003A //            PORTC&=~0x01;    ON LED
; 0000 003B //            delay_ms(00);
; 0000 003C //            PORTC|=0x01;    Off LED
; 0000 003D //        }
; 0000 003E         Read_AM2315();
;PCODE: $0000001E VOL: 0
; 0000 003F         delay_ms(2000);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0040     }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0041 }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0

	.DSEG
_0x6:
	.BYTE 0x7
;//
;//void Timer0_Init()
;//{
;//// Timer/Counter 0 initialization
;//// Clock source: System Clock
;//// Clock value: 8000.000 kHz
;//// Prescaler: 8
;//    TCCR0=(0<<CS02) | (1<<CS01) | (0<<CS00);  //Prescaler - 8
;//    TCNT0=0x9C;                               // 100us
;//}
;
;//void Delay_100us(unsigned int Time)
;//{
;///* Create delay function with 100us corresponding to each value */
;//    TCNT0=0x9D;         //Tinh toan = 0x9D, nhung bu sai so nen A0
;//    TIMSK|=0x01;        //Cho phep ngat tran timer0
;//    T_delay=0;          //Reset gia tri dem
;//    while(T_delay<Time);//Chua du
;//    TIMSK&=~0x01;       //Du thoi gian, tat ngat tran timer0
;//};
;
;void GPIO_Init(void){
; 0000 0057 void GPIO_Init(void){

	.CSEG
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0058 // Input/Output Ports initialization
; 0000 0059 // Port B initialization
; 0000 005A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=In Bit0=In
; 0000 005B     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005C     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 005D     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 005E 
; 0000 005F     // Port C initialization
; 0000 0060     // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0061     DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (1<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0062     // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0063     PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0064 
; 0000 0065     // Port D initialization
; 0000 0066     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0067     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0068     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0069     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 006A }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;
;char Convert_2Char(unsigned char numb_in){
; 0000 006C char Convert_2Char(unsigned char numb_in){
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 006D     char char_out;
; 0000 006E     if(numb_in<0x0A)  char_out=numb_in+0x30; //0-9 return '0'-'9'
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;	numb_in -> Y+1
;	char_out -> R17
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006F     else              char_out=numb_in+55;   //0x0A-0x0F return 'A'-'F'
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0070     return char_out;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0071 }
;PCODE: $0000004B VOL: 0
;
;int Read_AM2315(void)
; 0000 0074 {
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0075     unsigned char i=0;
; 0000 0076     static unsigned char finish=0;
; 0000 0077     //Wake up sensor (write value) Same
; 0000 0078     i2c_start();
;PCODE: $0000004E VOL: 0
;	i -> R17
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0079     i2c_write(0xb8);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 007A     delay_ms(2);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 007B     i2c_stop();
;PCODE: $00000057 VOL: 0
; 0000 007C 
; 0000 007D     //Write command to read value     same
; 0000 007E     i2c_start();
;PCODE: $00000058 VOL: 0
; 0000 007F     i2c_write(0xB8);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0080     i2c_write(0x03);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0081     i2c_write(0x00);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0082     i2c_write(0x04);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0083     i2c_stop();
;PCODE: $00000061 VOL: 0
; 0000 0084 
; 0000 0085     delay_ms(10);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0086 
; 0000 0087     //Read value
; 0000 0088     i2c_start();
;PCODE: $00000065 VOL: 0
; 0000 0089     i2c_write(0xb9);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 008A     for(i=0;i<8;i++)
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 008B     {
; 0000 008C         Receive[i]=i2c_read(1);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 008D     }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 008E     i2c_stop();
;PCODE: $0000007E VOL: 0
; 0000 008F     ///////////////////////////////
; 0000 0090     if (Receive[0]!=3) return 0;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0091     if (Receive[1]!=4) return 0;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0092     {
;PCODE: $0000008D VOL: 0
; 0000 0093         for(i=0;i<8;i++)
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0094         {
; 0000 0095             Receive[i]=Convert_2Char(Receive[i]);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0096         }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0097         lcd_gotoxy(0,0);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0098         lcd_puts(pointer_recv);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0099         lcd_gotoxy(15,1);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 009A         lcd_putchar(finish+'0');
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 009B         finish++;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 009C         if(finish>=10) PORTC&=~0x01;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 009D         else PORTC|=0x01;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 009E         if (finish>=100) finish=0;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 009F     }
;PCODE: $000000C3 VOL: 0
; 0000 00A0     return 1;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00A1 }
;PCODE: $000000C7 VOL: 0
;
;//interrupt [TIM0_OVF] void timer0_ovf_isr(void)
;//{
;//    // Reinitialize Timer 0 value
;//    T_delay++;
;//    TCNT0=0x9C;    //Tinh toan = 0x9C (100), nhung bu sai so nen A0
;//};
